{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gnusa\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0421\\u0430\\u043C\\u043E\\u043E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\react-course\\\\src\\\\components\\\\AppRouter.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom/cjs/react-router-dom.min';\nimport { publicRoutes, privateRoutes } from '../router';\nimport { AuthContext } from '../context';\nimport { useContext } from 'react';\nimport Loader from './UI/loader/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppRouter = () => {\n  _s();\n  const {\n    isAuth,\n    isLoading\n  } = useContext(AuthContext);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  }\n  return isAuth ? /*#__PURE__*/_jsxDEV(Switch, {\n    children: [privateRoutes.map(route => /*#__PURE__*/_jsxDEV(Route, {\n      component: route.component,\n      path: route.path,\n      exact: route.exact\n    }, route.path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 25\n    }, this)), /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(Switch, {\n    children: [publicRoutes.map(route => /*#__PURE__*/_jsxDEV(Route, {\n      component: route.component,\n      path: route.path,\n      exact: route.exact\n    }, route.path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }, this)), /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 13\n  }, this);\n};\n_s(AppRouter, \"p11QuzApV7ohcvywyZxmt3feicw=\");\n_c = AppRouter;\nexport default AppRouter;\nvar _c;\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"names":["React","Redirect","Route","Switch","publicRoutes","privateRoutes","AuthContext","useContext","Loader","jsxDEV","_jsxDEV","AppRouter","_s","isAuth","isLoading","fileName","_jsxFileName","lineNumber","columnNumber","children","map","route","component","path","exact","to","_c","$RefreshReg$"],"sources":["C:/Users/gnusa/OneDrive/Рабочий стол/Самообучение/React/react-course/src/components/AppRouter.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { publicRoutes, privateRoutes } from '../router';\r\nimport { AuthContext } from '../context';\r\nimport { useContext } from 'react';\r\nimport Loader from './UI/loader/Loader';\r\nconst AppRouter = () => {\r\n    const {isAuth, isLoading} = useContext(AuthContext)\r\n    \r\n    if (isLoading){\r\n        return <Loader/>\r\n    }\r\n\r\n    return (\r\n        isAuth\r\n            ?\r\n            <Switch>\r\n                {\r\n                    privateRoutes.map(route =>\r\n                        <Route key={route.path} component={route.component}\r\n                            path={route.path}\r\n                            exact={route.exact}\r\n                        />\r\n                    )\r\n                }\r\n                <Redirect to='/posts' />\r\n            </Switch>\r\n            :\r\n            <Switch>\r\n                {\r\n                    publicRoutes.map(route =>\r\n                        <Route key={route.path} component={route.component}\r\n                            path={route.path}\r\n                            exact={route.exact}\r\n                        />\r\n                    )\r\n                }\r\n                <Redirect to='/login' />\r\n            </Switch>\r\n    )\r\n}\r\n\r\nexport default AppRouter"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,KAAK,EAAEC,MAAM,QAAQ,2CAA2C;AACnF,SAASC,YAAY,EAAEC,aAAa,QAAQ,WAAW;AACvD,SAASC,WAAW,QAAQ,YAAY;AACxC,SAASC,UAAU,QAAQ,OAAO;AAClC,OAAOC,MAAM,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACxC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM;IAACC,MAAM;IAAEC;EAAS,CAAC,GAAGP,UAAU,CAACD,WAAW,CAAC;EAEnD,IAAIQ,SAAS,EAAC;IACV,oBAAOJ,OAAA,CAACF,MAAM;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EACpB;EAEA,OACIL,MAAM,gBAEFH,OAAA,CAACP,MAAM;IAAAgB,QAAA,GAECd,aAAa,CAACe,GAAG,CAACC,KAAK,iBACnBX,OAAA,CAACR,KAAK;MAAkBoB,SAAS,EAAED,KAAK,CAACC,SAAU;MAC/CC,IAAI,EAAEF,KAAK,CAACE,IAAK;MACjBC,KAAK,EAAEH,KAAK,CAACG;IAAM,GAFXH,KAAK,CAACE,IAAI;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGrB,CACL,CAAC,eAELR,OAAA,CAACT,QAAQ;MAACwB,EAAE,EAAC;IAAQ;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC,gBAETR,OAAA,CAACP,MAAM;IAAAgB,QAAA,GAECf,YAAY,CAACgB,GAAG,CAACC,KAAK,iBAClBX,OAAA,CAACR,KAAK;MAAkBoB,SAAS,EAAED,KAAK,CAACC,SAAU;MAC/CC,IAAI,EAAEF,KAAK,CAACE,IAAK;MACjBC,KAAK,EAAEH,KAAK,CAACG;IAAM,GAFXH,KAAK,CAACE,IAAI;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGrB,CACL,CAAC,eAELR,OAAA,CAACT,QAAQ;MAACwB,EAAE,EAAC;IAAQ;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAErB,CAAC;AAAAN,EAAA,CAlCKD,SAAS;AAAAe,EAAA,GAATf,SAAS;AAoCf,eAAeA,SAAS;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}