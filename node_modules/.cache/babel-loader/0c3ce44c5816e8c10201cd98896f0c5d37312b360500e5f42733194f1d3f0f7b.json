{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gnusa\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0421\\u0430\\u043C\\u043E\\u043E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\react-course\\\\src\\\\Pages\\\\PostPage.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useFetching } from '../hooks/useFetching';\nimport PostService from './../API/PostService';\nimport Loader from '../components/UI/loader/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostPage = () => {\n  _s();\n  const params = useParams();\n  F;\n  const [post, setPost] = useState({});\n  const [comments, setComments] = useState([]);\n  const [fetchPostById, isLoadingPost, errorPost] = useFetching(async id => {\n    const response = await PostService.getById(id);\n    setPost(response.data);\n  });\n  const [fetchCommentsByPostId, isLoadingComments, errorComments] = useFetching(async id => {\n    const response = await PostService.getCommentsByIdPost(id);\n    setComments(response.data);\n  });\n  useEffect(() => {\n    fetchPostById(params.id);\n    fetchCommentsByPostId(params.id);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoadingPost ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\u0412\\u044B \\u043E\\u0442\\u043A\\u0440\\u044B\\u043B\\u0438 \\u043F\\u043E\\u0441\\u0442 \", post.id, \". \", post.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 19\n    }, this), isLoadingComments ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: comments.map(com => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: com.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: com.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(PostPage, \"PvwEjaJqy2Ymlg+I9fG0FNXtVOo=\", false, function () {\n  return [useParams, useFetching, useFetching];\n});\n_c = PostPage;\nexport default PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useFetching","PostService","Loader","jsxDEV","_jsxDEV","PostPage","_s","params","F","post","setPost","comments","setComments","fetchPostById","isLoadingPost","errorPost","id","response","getById","data","fetchCommentsByPostId","isLoadingComments","errorComments","getCommentsByIdPost","children","fileName","_jsxFileName","lineNumber","columnNumber","title","map","com","email","body","_c","$RefreshReg$"],"sources":["C:/Users/gnusa/OneDrive/Рабочий стол/Самообучение/React/react-course/src/Pages/PostPage.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useFetching } from '../hooks/useFetching'\r\nimport PostService from './../API/PostService';\r\nimport Loader from '../components/UI/loader/Loader';\r\n\r\nconst PostPage = () => {\r\n    const params = useParams()\r\nF\r\n    const [post, setPost] = useState({});\r\n    const [comments, setComments] = useState([]);\r\n    const [fetchPostById, isLoadingPost, errorPost] = useFetching(async (id) => {\r\n        const response = await PostService.getById(id);\r\n        setPost(response.data);\r\n    })\r\n    const [fetchCommentsByPostId, isLoadingComments, errorComments] = useFetching(async (id) => {\r\n        const response = await PostService.getCommentsByIdPost(id);\r\n        setComments(response.data);\r\n    })\r\n\r\n    useEffect(() => {\r\n        fetchPostById(params.id);\r\n        fetchCommentsByPostId(params.id);\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {isLoadingPost\r\n                ? <Loader />\r\n                : <h1>Вы открыли пост {post.id}. {post.title}</h1>\r\n            }\r\n            {isLoadingComments\r\n                ? <Loader />\r\n                : <div>\r\n                    {comments.map(com => \r\n                        <div>\r\n                            <h5>{com.email}</h5>\r\n                            <p>{com.body}</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostPage"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,WAAW,QAAQ,sBAAsB;AAClD,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,MAAM,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,MAAM,GAAGR,SAAS,CAAC,CAAC;EAC9BS,CAAC;EACG,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,aAAa,EAAEC,aAAa,EAAEC,SAAS,CAAC,GAAGf,WAAW,CAAC,MAAOgB,EAAE,IAAK;IACxE,MAAMC,QAAQ,GAAG,MAAMhB,WAAW,CAACiB,OAAO,CAACF,EAAE,CAAC;IAC9CN,OAAO,CAACO,QAAQ,CAACE,IAAI,CAAC;EAC1B,CAAC,CAAC;EACF,MAAM,CAACC,qBAAqB,EAAEC,iBAAiB,EAAEC,aAAa,CAAC,GAAGtB,WAAW,CAAC,MAAOgB,EAAE,IAAK;IACxF,MAAMC,QAAQ,GAAG,MAAMhB,WAAW,CAACsB,mBAAmB,CAACP,EAAE,CAAC;IAC1DJ,WAAW,CAACK,QAAQ,CAACE,IAAI,CAAC;EAC9B,CAAC,CAAC;EAEFtB,SAAS,CAAC,MAAM;IACZgB,aAAa,CAACN,MAAM,CAACS,EAAE,CAAC;IACxBI,qBAAqB,CAACb,MAAM,CAACS,EAAE,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIZ,OAAA;IAAAoB,QAAA,GACKV,aAAa,gBACRV,OAAA,CAACF,MAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBACVxB,OAAA;MAAAoB,QAAA,GAAI,mFAAgB,EAACf,IAAI,CAACO,EAAE,EAAC,IAAE,EAACP,IAAI,CAACoB,KAAK;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAErDP,iBAAiB,gBACZjB,OAAA,CAACF,MAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBACVxB,OAAA;MAAAoB,QAAA,EACGb,QAAQ,CAACmB,GAAG,CAACC,GAAG,iBACb3B,OAAA;QAAAoB,QAAA,gBACIpB,OAAA;UAAAoB,QAAA,EAAKO,GAAG,CAACC;QAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpBxB,OAAA;UAAAoB,QAAA,EAAIO,GAAG,CAACE;QAAI;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAET,CAAC;AAEd,CAAC;AAAAtB,EAAA,CAtCKD,QAAQ;EAAA,QACKN,SAAS,EAI0BC,WAAW,EAIKA,WAAW;AAAA;AAAAkC,EAAA,GAT3E7B,QAAQ;AAwCd,eAAeA,QAAQ;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}