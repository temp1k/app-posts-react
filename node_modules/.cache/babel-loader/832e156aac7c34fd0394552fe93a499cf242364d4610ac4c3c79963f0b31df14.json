{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gnusa\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0421\\u0430\\u043C\\u043E\\u043E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\react-course\\\\src\\\\Pages\\\\Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { usePosts } from '../hooks/usePosts';\nimport { useFetching } from '../hooks/useFetching';\nimport PostService from '../API/PostService';\nimport { getPageCount } from '../utils/pages';\nimport MyButton from '../components/UI/button/MyButton';\nimport MyModal from '../components/UI/MyModal/MyModal';\nimport Loader from '../components/UI/loader/Loader';\nimport PostForm from '../components/PostForm';\nimport PostFilter from '../components/PostFilter';\nimport Pagination from '../components/UI/pagination/Pagination';\nimport PostList from '../components/PostList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Post() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState({\n    sort: '',\n    query: ''\n  });\n  const [modal, setModal] = useState(false);\n  const [totalPages, setTotalPages] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const sortedAndSearchPosts = usePosts(posts, filter.sort, filter.query);\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\n    let response = await PostService.getAll(limit, page);\n    let countTotal = response.headers['x-total-count'];\n    setPosts(...posts, ...response.data);\n    setTotalPages(getPageCount(countTotal, limit));\n  });\n  useEffect(() => {\n    fetchPosts();\n  }, [page]);\n  let createPost = newPost => {\n    setPosts([...posts, newPost]);\n    setModal(false);\n  };\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n  const changePage = page => {\n    setPage(page);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(MyButton, {\n      style: {\n        marginTop: '15px'\n      },\n      onClick: () => setModal(true),\n      children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043F\\u043E\\u0441\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(PostForm, {\n        create: createPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: \"15px 0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostFilter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), postError && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\u041F\\u0440\\u043E\\u0438\\u0437\\u043E\\u0448\\u043B\\u0430 \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430 \", postError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      posts: sortedAndSearchPosts,\n      title: 'Посты про JS'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), isPostsLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        marginTop: \"50px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 87\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      page: page,\n      changePage: changePage,\n      totalPages: totalPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Post, \"nXSZYSkBCmss2KHoonjg8y/T8S0=\", false, function () {\n  return [usePosts, useFetching];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useEffect","useState","usePosts","useFetching","PostService","getPageCount","MyButton","MyModal","Loader","PostForm","PostFilter","Pagination","PostList","jsxDEV","_jsxDEV","Post","_s","posts","setPosts","filter","setFilter","sort","query","modal","setModal","totalPages","setTotalPages","limit","setLimit","page","setPage","sortedAndSearchPosts","fetchPosts","isPostsLoading","postError","response","getAll","countTotal","headers","data","createPost","newPost","removePost","post","p","id","changePage","className","children","style","marginTop","onClick","fileName","_jsxFileName","lineNumber","columnNumber","visible","setVisible","create","margin","remove","title","display","justifyContent","_c","$RefreshReg$"],"sources":["C:/Users/gnusa/OneDrive/Рабочий стол/Самообучение/React/react-course/src/Pages/Posts.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { usePosts } from '../hooks/usePosts';\r\nimport { useFetching } from '../hooks/useFetching';\r\nimport  PostService  from '../API/PostService';\r\nimport { getPageCount } from '../utils/pages';\r\nimport MyButton from '../components/UI/button/MyButton';\r\nimport MyModal from '../components/UI/MyModal/MyModal';\r\nimport Loader from '../components/UI/loader/Loader';\r\nimport PostForm from '../components/PostForm'; \r\nimport PostFilter from '../components/PostFilter'; \r\nimport Pagination from '../components/UI/pagination/Pagination'; \r\nimport PostList from '../components/PostList'; \r\n\r\nfunction Post() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [filter, setFilter] = useState({sort: '', query: ''})\r\n  const [modal, setModal] = useState(false);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n\r\n  const sortedAndSearchPosts = usePosts(posts, filter.sort, filter.query);\r\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\r\n    let response = await PostService.getAll(limit, page);\r\n    let countTotal = response.headers['x-total-count'];\r\n    setPosts(...posts, ...response.data);\r\n    setTotalPages(getPageCount(countTotal, limit))\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, [page]);\r\n\r\n  let createPost = (newPost) => {\r\n    setPosts([...posts, newPost])\r\n    setModal(false);\r\n  }\r\n\r\n  const removePost = (post) => {\r\n    setPosts(posts.filter(p => p.id !== post.id))\r\n  }\r\n\r\n  const changePage = (page) => {\r\n    setPage(page);\r\n  }\r\n  \r\n  return (   \r\n    <div className=\"App\">\r\n      <MyButton style={{marginTop: '15px'}} onClick={() => setModal(true)}>\r\n        Создать пост\r\n      </MyButton>\r\n      <MyModal visible={modal} setVisible={setModal}>\r\n        <PostForm create={createPost}/>\r\n      </MyModal>\r\n      <hr style={{margin: \"15px 0\"}}/>\r\n      <PostFilter filter={filter} setFilter={setFilter}/>\r\n      {postError &&\r\n       <h1>Произошла ошибка {postError}</h1>\r\n      }\r\n      <PostList remove={removePost} posts={sortedAndSearchPosts} title={'Посты про JS'}/>\r\n      {isPostsLoading &&\r\n          <div style={{display: \"flex\", justifyContent: \"center\", marginTop: \"50px\"}}><Loader/></div>\r\n      }\r\n      <Pagination\r\n        page={page} changePage={changePage} totalPages={totalPages}\r\n      />\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,WAAW,QAAQ,sBAAsB;AAClD,OAAQC,WAAW,MAAO,oBAAoB;AAC9C,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,OAAOC,QAAQ,MAAM,kCAAkC;AACvD,OAAOC,OAAO,MAAM,kCAAkC;AACtD,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,UAAU,MAAM,wCAAwC;AAC/D,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACkB,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC;IAACoB,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAE,CAAC,CAAC;EAC3D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACwB,UAAU,EAAEC,aAAa,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAAC0B,KAAK,EAAEC,QAAQ,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC4B,IAAI,EAAEC,OAAO,CAAC,GAAG7B,QAAQ,CAAC,CAAC,CAAC;EAEnC,MAAM8B,oBAAoB,GAAG7B,QAAQ,CAACe,KAAK,EAAEE,MAAM,CAACE,IAAI,EAAEF,MAAM,CAACG,KAAK,CAAC;EACvE,MAAM,CAACU,UAAU,EAAEC,cAAc,EAAEC,SAAS,CAAC,GAAG/B,WAAW,CAAC,YAAY;IACtE,IAAIgC,QAAQ,GAAG,MAAM/B,WAAW,CAACgC,MAAM,CAACT,KAAK,EAAEE,IAAI,CAAC;IACpD,IAAIQ,UAAU,GAAGF,QAAQ,CAACG,OAAO,CAAC,eAAe,CAAC;IAClDpB,QAAQ,CAAC,GAAGD,KAAK,EAAE,GAAGkB,QAAQ,CAACI,IAAI,CAAC;IACpCb,aAAa,CAACrB,YAAY,CAACgC,UAAU,EAAEV,KAAK,CAAC,CAAC;EAChD,CAAC,CAAC;EAEF3B,SAAS,CAAC,MAAM;IACdgC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACH,IAAI,CAAC,CAAC;EAEV,IAAIW,UAAU,GAAIC,OAAO,IAAK;IAC5BvB,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEwB,OAAO,CAAC,CAAC;IAC7BjB,QAAQ,CAAC,KAAK,CAAC;EACjB,CAAC;EAED,MAAMkB,UAAU,GAAIC,IAAI,IAAK;IAC3BzB,QAAQ,CAACD,KAAK,CAACE,MAAM,CAACyB,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKF,IAAI,CAACE,EAAE,CAAC,CAAC;EAC/C,CAAC;EAED,MAAMC,UAAU,GAAIjB,IAAI,IAAK;IAC3BC,OAAO,CAACD,IAAI,CAAC;EACf,CAAC;EAED,oBACEf,OAAA;IAAKiC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBlC,OAAA,CAACR,QAAQ;MAAC2C,KAAK,EAAE;QAACC,SAAS,EAAE;MAAM,CAAE;MAACC,OAAO,EAAEA,CAAA,KAAM3B,QAAQ,CAAC,IAAI,CAAE;MAAAwB,QAAA,EAAC;IAErE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC,eACXzC,OAAA,CAACP,OAAO;MAACiD,OAAO,EAAEjC,KAAM;MAACkC,UAAU,EAAEjC,QAAS;MAAAwB,QAAA,eAC5ClC,OAAA,CAACL,QAAQ;QAACiD,MAAM,EAAElB;MAAW;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACVzC,OAAA;MAAImC,KAAK,EAAE;QAACU,MAAM,EAAE;MAAQ;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAChCzC,OAAA,CAACJ,UAAU;MAACS,MAAM,EAAEA,MAAO;MAACC,SAAS,EAAEA;IAAU;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAClDrB,SAAS,iBACTpB,OAAA;MAAAkC,QAAA,GAAI,8FAAiB,EAACd,SAAS;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEtCzC,OAAA,CAACF,QAAQ;MAACgD,MAAM,EAAElB,UAAW;MAACzB,KAAK,EAAEc,oBAAqB;MAAC8B,KAAK,EAAE;IAAe;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAClFtB,cAAc,iBACXnB,OAAA;MAAKmC,KAAK,EAAE;QAACa,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,QAAQ;QAAEb,SAAS,EAAE;MAAM,CAAE;MAAAF,QAAA,eAAClC,OAAA,CAACN,MAAM;QAAA4C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAE/FzC,OAAA,CAACH,UAAU;MACTkB,IAAI,EAAEA,IAAK;MAACiB,UAAU,EAAEA,UAAW;MAACrB,UAAU,EAAEA;IAAW;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAEV;AAACvC,EAAA,CAxDQD,IAAI;EAAA,QAQkBb,QAAQ,EACWC,WAAW;AAAA;AAAA6D,EAAA,GATpDjD,IAAI;AA0Db,eAAeA,IAAI;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}